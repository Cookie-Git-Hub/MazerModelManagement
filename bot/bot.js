// bot/bot.js
const axios = require("axios");
const FormData = require("form-data"); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ form-data —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
const { telegramToken, chatId } = require("../config");
const TELEGRAM_API = `https://api.telegram.org/bot${telegramToken}`;
const { Telegraf } = require("telegraf");
const bot = new Telegraf(telegramToken);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ Web App
bot.start((ctx) => {
  ctx.reply("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "–û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É",
            web_app: { url: "https://000f-37-214-32-178.ngrok-free.app" },
          },
        ],
      ],
    },
  });
});

bot.launch();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –æ—Ç–∫—Ä—ã—Ç—å Web App");

async function sendMessageToTelegram(data, files) {
  const messageText = `üìã–ü–æ–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞üìã\n <b>–ò–º—è:</b> ${data.name}\n <b>–†–æ—Å—Ç:</b> ${data.height}\n <b>–í–æ–∑—Ä–∞—Å—Ç:</b> ${data.age}\n <b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b> ${data.nationality}\n <b>–ü—Ä–æ–∂–∏–≤–∞–µ—Ç:</b> ${data.based}\n <b>–ó–∞–º–µ—Ä—ã:</b> ${data.bust}/${data.waist}/${data.hips}\n <b>Instagram:</b> ${data.instagram}\n <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b> ${data.contact}\n <b>–û —Å–µ–±–µ:</b> ${data.about}`;

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
  await axios.post(`${TELEGRAM_API}/sendMessage`, {
    chat_id: chatId,
    text: messageText,
    parse_mode: "HTML",
  });


  const photos = [];
  const videos = [];

  files.forEach((file) => {
    const fileType = file.mimetype.split('/')[0];  // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ (image –∏–ª–∏ video)

    if (fileType === 'image') {
      photos.push(file);
    } else if (fileType === 'video') {
      videos.push(file);
    }
  });

  const mediaGroup = [];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –≥—Ä—É–ø–ø—É
    photos.forEach((file, index) => {
      mediaGroup.push({
        type: 'photo',
        media: `attach://${file.originalname}`,
        caption: index === 0 ? messageText : '',  // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      });
    });
  
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É
    videos.forEach((file, index) => {
      mediaGroup.push({
        type: 'video',
        media: `attach://${file.originalname}`,
        caption: index === 0 ? messageText : '',  // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–∏–¥–µ–æ
      });
    });

    // –°–æ–∑–¥–∞–µ–º FormData –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
  const formData = new FormData();
  formData.append('chat_id', chatId);
  formData.append('media', JSON.stringify(mediaGroup));

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ
  [...photos, ...videos].forEach((file) => {
    formData.append(file.originalname, file.buffer, file.originalname);
  });

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ sendMediaGroup
  await axios.post(`${TELEGRAM_API}/sendMediaGroup`, formData, {
    headers: formData.getHeaders(),
  }).catch((error) => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤ –≤ Telegram:', error);
  });

  // // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Telegram
  // for (const file of files) {
  //   const formData = new FormData();
  //   formData.append('chat_id', chatId);
  //   formData.append('document', file.buffer, file.originalname);  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

  //   await axios.post(`${TELEGRAM_API}/sendDocument`, formData, {
  //     headers: formData.getHeaders()
  //   }).catch(error => {
  //     console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –≤ Telegram:", error);
  //   });
  // }
}

module.exports = { sendMessageToTelegram };
